openapi: 3.1.0
info:
  title: MDZ Project Assistant Middleware API
  description: |-
    This is the api description of the middleware for the MDZ Project Assistant.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
#servers:
#  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: customers
    description: Operations concerning the customer objects
  - name: documents
    description: Operations concerning the document objects
  - name: chats
    description: Operations concerning the chats
  - name: system
    description: Operations concerning the system
paths:
  /customers:
    get:
      tags:
        - customers
      summary: List customers
      description: List of all customers
      operationId: listCustomers
      parameters:
        - name: search
          in: query
          description: "Provides a fulltext-like search over all searchable properties."
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid status value
    post:
      tags:
        - customers
      summary: Add a new customer
      description: Add a new customer
      operationId: createCustomer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewCustomer'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid input
  /customers/{customerId}:
    get:
      tags:
        - customers
      summary: Find customer by ID
      description: Specific customer
      operationId: getCustomerById
      parameters:
        - name: customerId
          in: path
          description: ID of specified customer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid ID supplied
        '404':
          description: Not found
    delete:
      tags:
        - customers
      summary: Deletes a customer
      description: Delete a specified customer
      operationId: deleteCustomerById
      parameters:
        - name: customerId
          in: path
          description: ID of specified customer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid value

  /customers/{customerId}/documents:
    get:
      tags:
        - documents
      summary: List documents for specified customer
      description: List of all documents for a specified customer
      operationId: listDocumentsOfCustomer
      parameters:
        - name: customerId
          in: path
          description: ID of specified customer
          required: true
          schema:
            type: integer
            format: int64
        - name: search
          in: query
          description: "Provides a fulltext-like search over all searchable properties."
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
        '400':
          description: Invalid value
    post:
      parameters:
        - name: customerId
          in: path
          description: ID of specified customer
          required: true
          schema:
            type: integer
            format: int64
      tags:
        - documents
      summary: Add a new document to a customer
      description: Add a new document to a customer
      operationId: uploadDocumentForCustomer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewDocument'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Invalid input
  /customers/{customerId}/documents/{documentId}:
    post:
      tags:
        - documents
      summary: Edit properties of a document
      description: Edit properties of a document of a customer
      operationId: editDocumentOfCustomer
      parameters:
        - name: customerId
          in: path
          description: ID of specified customer
          required: true
          schema:
            type: integer
            format:
              int64
        - name: documentId
          in: path
          description: ID of document
          required: true
          schema:
            type: integer
            format:
              int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Invalid input
    delete:
      tags:
        - documents
      summary: Deletes a document
      description: Delete a specified document
      operationId: deleteDocument
      parameters:
        - name: customerId
          in: path
          description: ID of specified customer
          required: true
          schema:
            type: integer
            format: int64
        - name: documentId
          in: path
          description: ID of specified document
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid value

  /customers/{customerId}/chat:
    get:
      tags:
        - chats
      summary: List chats for customer
      description: List all chats for specified customer
      operationId: listChatForCustomer
      parameters:
        - name: customerId
          in: path
          description: ID of specified customer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatHistory'
        '400':
          description: Invalid ID supplied
        '404':
          description: Not found
    post:
      tags:
        - chats
      summary: Send new chat message
      description: Send new chat message concerning specified customer
      operationId: CreateNewChatMessage
      parameters:
        - name: customerId
          in: path
          description: ID of specified customer
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewChatMessage'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatHistory'
        '400':
          description: Invalid ID supplied
        '404':
          description: Not found

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
          readOnly: true
        firstname:
          type: string
          example: Max
        lastname:
          type: string
          example: Mustermann
        advisor:
          type: integer
          format: int64
          example: 200000
          description: Id of the assigned advisor.
        masterDataSheet:
          type: array
          description: List of ids of all related master data sheet documents.
          items:
            type: integer
            format: int64
            example: 400000
    Advisor:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 200000
        firstname:
          type: string
          example: Max
        lastname:
          type: string
          example: Mustermann
        username:
          type: string
          example: max.mustermann
        email:
          type: string
          example: max.mustermann@mustermail.de
    Document:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 300000
          readOnly: true
        createdAt:
          type: string
          format: date-time
          example: "2024-01-01T12:34:00.000Z"
          readOnly: true
        name:
          type: string
    ChatMessage:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
          readOnly: true
        sender:
          type: string
          enum: [advisor, system]
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        relatedDocuments:
          type: array
          items:
            type: integer
            format: int64
    ChatHistory:
      type: array
      items:
        $ref: '#/components/schemas/ChatMessage'
    NewCustomer:
      type: object
      required:
        - firstname
        - lastname
        - advisor
      properties:
        firstname:
          type: string
          example: Max
        lastname:
          type: string
          example: Mustermann
        advisor:
          type: integer
          format: int64
          example: 200000
          description: Id of the assigned advisor.
        masterDataSheet:
          type: string
          format: binary
          description: Master data sheet file for the new customer.
    NewDocument:
      type: object
      required:
        - file
      properties:
        name:
          type: string
          description: If unset, will use name of the transmitted file
        file:
          type: string
          format: binary
          description: Needs to be a pdf file.
    NewChatMessage:
      type: object
      properties:
        message:
          type: string
        sender:
          type: string
          enum: [ advisor, system ]
          default: advisor
        relatedDocuments:
          type: array
          items:
            type: integer
            format: int64