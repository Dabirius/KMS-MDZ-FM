version: "3"
services:
  qdrant:
    image: qdrant/qdrant
    restart: unless-stopped
    volumes:
      - .:/qdrant/storage:z

  middleware_docker:
    image: ghcr.io/dabirius/kms-mdz-fm-middleware:latest
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:5000/health || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./data.json:/app/data.json
    depends_on:
      - qdrant

  postgresDB:
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file:
      - .env
    image: postgres:14.11-bullseye
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - mdz-project-assistant-dev-data:/var/lib/postgresql/data/ #using a volume
    #ports:
    #  - "${EXT_PORT_DB}:5432"

  pgadmin:
    image: dpage/pgadmin4:8.3
    restart: unless-stopped
    ports:
      - "${EXT_PORT_PGADMIN}:80"
    depends_on:
      postgresDB:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json


  nuxt:
    image: ghcr.io/dabirius/mdz-project-assistant-nuxt:latest
    restart: unless-stopped
    ports:
      - "${EXT_PORT_NODE}:3000"
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresDB:5432/${POSTGRES_DB}?schema=public #prisma migration url
      MIDDLEWARE_API_BASEPATH: http://middleware_docker:5000
    depends_on:
      postgresDB:
        condition: service_healthy
      middleware_docker:
        condition: service_healthy

volumes:
  mdz-project-assistant-dev-data:
